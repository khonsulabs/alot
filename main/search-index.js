var searchIndex = JSON.parse('{\
"alot":{"doc":"alot","t":"DDCCLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLADDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Generation","LotId","Lots","OrderedLots","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","first","fmt","fmt","from","from","generation","get","hash","index","into","into","next","ordered","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unordered","Drain","EntryIter","IntoIter","Iter","OrderedLots","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","drain","drain_filter","drop","entries","eq","eq","eq","eq","eq","fmt","from","from","from","from","from","from_iter","get","get_by_index","get_mut","get_mut_by_index","index","index","index_mut","index_mut","insert","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","key","len","new","next","next","next","next","push","remove","sort","sort_by","sort_by_cached_key","sort_by_key","sort_unstable","sort_unstable_by","sort_unstable_by_key","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_capacity","Drain","DrainAll","DrainFilter","EntryIter","IntoIter","Iter","Lots","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","drain","drain_filter","drop","entries","eq","filter","filter","fmt","from","from","from","from","from","from","from_iter","get","get_mut","index","index_mut","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","new","next","next","next","next","push","remove","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity"],"q":[[0,"alot"],[36,"alot::ordered"],[131,"alot::unordered"]],"d":["","A <code>LotId</code> is a single <code>usize</code>, encoding generation information …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An ordered collection of values, accessible by <code>LotId</code> or …","","","","","","","","","An unordered collection of values, accessible by <code>LotId</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collection of <code>T</code>, organized by generational <code>LotId</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,1,1,2,2,0,1,2,1,2,1,2,1,2,0,0,0,0,0,0,16,23,12,13,14,16,23,12,13,14,12,13,14,12,13,14,12,12,12,16,12,12,12,12,12,12,12,16,23,12,13,14,12,12,12,12,12,12,12,12,12,12,16,23,12,13,14,16,23,12,12,13,14,12,12,12,12,12,16,23,13,14,12,12,12,12,12,12,12,12,12,12,13,14,16,23,12,13,14,16,23,12,13,14,16,23,12,13,14,12,0,0,0,0,0,0,0,29,15,30,26,27,28,29,15,30,26,27,28,26,26,27,28,26,27,28,26,26,26,29,26,26,18,15,26,29,15,30,26,27,28,26,26,26,26,26,29,15,30,26,27,28,29,30,26,26,27,28,26,26,26,26,29,30,27,28,26,26,26,27,28,29,15,30,26,27,28,29,15,30,26,27,28,29,15,30,26,27,28,26],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],2],[[1,4],5],[[2,4],5],[[]],[[]],[1,2],[2,6],[[1,7]],[1,8],[[]],[[]],[2,2],0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]]],[[12,[11]]]],[[[13,[11]]],[[13,[11]]]],[[[14,[11]]],[[14,[11]]]],[[]],[[]],[[]],[[],12],[12,[[16,[15]]]],[[12,17],[[16,[17]]]],[[[16,[18]]]],[12,14],[[[12,[19]]],3],[[[12,[19]]],3],[[[12,[19]]],3],[[[12,[19]]],3],[[[12,[19]],[12,[19]]],3],[[[12,[20]],4],5],[[]],[[]],[[]],[[]],[[]],[21,12],[[12,1],22],[[12,8],22],[[12,1],22],[[12,8],22],[[12,8]],[[12,1]],[[12,1]],[[12,8]],[[12,8],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[[]],[[]],[12,3],[12,13],[[12,8],[[22,[1]]]],[12,8],[[],12],[[[16,[18]]],22],[23,22],[13,22],[14,22],[12,1],[[12,1],22],[[[12,[24]]]],[[12,25]],[[12,17]],[[12,17]],[[[12,[24]]]],[[12,25]],[[12,17]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[8,12],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[[[26,[11]]],[[26,[11]]]],[[[27,[11]]],[[27,[11]]]],[[[28,[11]]],[[28,[11]]]],[[]],[[]],[[]],[[],26],[26,[[29,[15]]]],[[26,17],[[29,[17]]]],[[[29,[18]]]],[26,28],[[[26,[19]],[26,[19]]],3],[[],3],[15,3],[[[26,[20]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[21,26],[[26,1],22],[[26,1],22],[[26,1]],[[26,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[26],[[]],[[]],[26,3],[26,27],[26,8],[[],26],[[[29,[18]]],22],[30,22],[27,22],[28,22],[26,1],[[26,1],22],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[8,26]],"c":[],"p":[[3,"LotId"],[3,"Generation"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u16"],[8,"Hasher"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[3,"OrderedLots"],[3,"Iter"],[3,"EntryIter"],[3,"DrainAll"],[3,"Drain"],[8,"FnMut"],[8,"DrainFilter"],[8,"PartialEq"],[8,"Debug"],[8,"IntoIterator"],[4,"Option"],[3,"IntoIter"],[8,"Ord"],[8,"Fn"],[3,"Lots"],[3,"Iter"],[3,"EntryIter"],[3,"Drain"],[3,"IntoIter"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
